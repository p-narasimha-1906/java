package in.inheritence;

import java.util.Hashtable;

interface employee1
{
	default void m1()
	{
		System.out.println("from employee1");
	}
}
interface employee2
{
	default void m1()
	{
		System.out.println("from employee2");
	}
}

public class multiple{
	public static void main(String[] args) {
		Hashtable<Integer, String> h=new Hashtable<>();
		h.put(1, "first");
		h.put(11, "first");
		h.put(2, "second");
		h.put(0, "zero");
		h.put(10, "ten");
		h.put(9, "nine");
		h.put(111, "first");
		h.put(21, "second");
		h.put(90, "zero");
		h.put(100, "ten");
		h.put(94, "nine");
		h.put(86, "first");
		h.put(82, "first");
		System.out.println(h);
		
		Thread t1=new Thread(){
			public void run()
			{
				for(Integer s:h.keySet())
				{
					System.out.println(h.get(s)+Thread.currentThread().getName());
					try {
					Thread.sleep(1000);
					}
					catch (Exception e) {
						// TODO: handle exception
					}
				}
			}
		};
		Thread t2=new Thread(){
			public void run()
			{
				for(Integer s:h.keySet())
				{
					System.out.println(h.get(s)+Thread.currentThread().getName());
					try {
					Thread.sleep(1000);
					}
					catch (Exception e) {
						// TODO: handle exception
					}
				}
			}
		};
		t1.setName("first thread");
		t2.setName("second thread");
		t1.start();
		t2.start();
}
}